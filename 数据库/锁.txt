1 myisam和innodb关于锁方面的区别？

myisam默认支持的是表级锁，不支持行级锁；
当myisam的查询表时，会给表加上读锁，当其他的session想要增删改数据时，必须等到其他session释放读锁之后才能对表数据加上写锁，
如何显示的加上锁：
lock tables table_name read | write； 
unlock tables；


innodb默认支持的是行级锁，也支持表级锁；
innodb事务默认是自动提交的，show variables like 'autocommit';如何设置事务不默认提交，set autocommit = 0;
innodb当查询没有用到索引的时候，用的是表级锁，只有sql语句走了索引的时候才用到行级锁；

锁分为共享锁和排他锁，读一般上共享锁，删除改一般上排他锁，上了共享锁之后不能增删改，但是可以查，如果上了排他锁，增删改查都不允许，
如何上排他锁，select * from table_name for update
如何上共享锁，select * from table_name lock in share mode;


myisam适合的场景：
频繁执行全表的count语句，有一个单独的变量保存了全表的数目信息，查询非常快；
对数据进行增删改的频率不高，查询非常频繁；
没有事务；
innodb适合的场景：
数据增删改查都非常频繁；
可靠性要求非常高，要求支持事务；

数据库锁的分类：
按锁的粒度划分，可分为表级锁，行级锁，页级锁；
按锁级别划分，可分为共享锁，排他锁；
按锁方式划分，可分为自动锁，显示锁；
按操作划分，可分为DML锁，DDL锁；
按使用方式划分，可分为乐观锁，悲观锁；

乐观锁的实现方式可以分为版本号和时间戳，假定数据不会造成冲突，只在最后提交的时候来检测；342 

2 数据库事务的四大特性？

原子性（atomic）：事务包含的所有操作要么全部执行，要么全部不执行；
一致性（consistent）：应确保数据库的一个一致状态转变为另一个一致的状态，一致性状态的定义应满足完整性约束；
隔离性（isolation）：多个事务并发执行时，一个事务的执行不影响其他事务的执行；
持久性（durability）：一个事务一旦提交，它对数据库的修改应该永久保存在数据库中，一个已提交事务的更新能回复；

3 事务隔离级别以及各级别下的并发访问问题？

更新丢失：一个事务的更新覆盖了另一个事务的更新；
脏读：一个事务可以读到另一个事务未提交的更新数据；可以在read-committed事务隔离级别以上避免；
不可重复读：事务A多次读取同一数据，事务B在事务A多次读取的过程中做了更新并提交，导致事务A多次读取同一数据时不一致；reaptable-read事务隔离级别以上可以避免；
幻读：事务A读取与sql条件相匹配的若干行，事务B以插入或删除若干行的方式来修改事务A的结果集，导致事务A像出现了幻觉一样 ；serializable事务隔离级别可避免；

查看数据库的隔离级别：
select @@tx_isolation;
set session transaction isolation level read uncommitted;

4 innodb可重复读级别下如何避免幻读？

表象：快照读（非阻塞读） --伪MVCC
内在：next-key锁（行锁+gap锁）

reapteable-read级别下快照读可能读到之前的版本

当前读：
update,delete,insert,select ... lock in share mode,select ... for update;
就是加了锁的增删改查语句，不管是共享锁还是排他锁；
快照读：
不加锁的非阻塞读，select


5 RC RR 级别下的innodb的非阻塞读如何实现？

数据行里的DB_TRX_ID,DB_ROLL_PTR,DB_ROW_IDd字段；
undo日志；insert undo log，update undo log；
read view；
